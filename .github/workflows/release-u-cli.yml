name: Release U-CLI

on:
  push:
    tags:
      - 'u-cli-v*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build for Linux AMD64
      run: |
        GOOS=linux GOARCH=amd64 go build -o u-cli-linux-amd64 ./cmd/u-cli

    - name: Build for Linux ARM64
      run: |
        GOOS=linux GOARCH=arm64 go build -o u-cli-linux-arm64 ./cmd/u-cli

    - name: Build for Darwin AMD64
      run: |
        GOOS=darwin GOARCH=amd64 go build -o u-cli-darwin-amd64 ./cmd/u-cli

    - name: Build for Windows AMD64
      run: |
        GOOS=windows GOARCH=amd64 go build -o u-cli-windows-amd64.exe ./cmd/u-cli

    - name: Create archives
      run: |
        tar -czf u-cli-linux-amd64.tar.gz u-cli-linux-amd64
        tar -czf u-cli-linux-arm64.tar.gz u-cli-linux-arm64
        tar -czf u-cli-darwin-amd64.tar.gz u-cli-darwin-amd64
        zip u-cli-windows-amd64.zip u-cli-windows-amd64.exe

    - name: Create Debian packages
      run: |
        # Build .deb packages for different architectures
        # This would typically use a Debian packaging tool or script

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: U-CLI ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Linux AMD64 binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./u-cli-linux-amd64.tar.gz
        asset_name: u-cli-linux-amd64.tar.gz
        asset_content_type: application/gzip

    - name: Upload Linux ARM64 binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./u-cli-linux-arm64.tar.gz
        asset_name: u-cli-linux-arm64.tar.gz
        asset_content_type: application/gzip

    - name: Upload Darwin AMD64 binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./u-cli-darwin-amd64.tar.gz
        asset_name: u-cli-darwin-amd64.tar.gz
        asset_content_type: application/gzip

    - name: Upload Windows AMD64 binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./u-cli-windows-amd64.zip
        asset_name: u-cli-windows-amd64.zip
        asset_content_type: application/zip

    - name: Upload Debian packages
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./apt/u-cli/u-cli_*.deb
        asset_name: u-cli.deb
        asset_content_type: application/vnd.debian.binary-package