name: Build U-CLI

on:
  push:
    branches: [ master ]
    paths:
      - 'u-cli/**'
      - '.github/workflows/build-u-cli.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'u-cli/**'
      - '.github/workflows/build-u-cli.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install build dependencies
      run: sudo apt-get update && sudo apt-get install -y build-essential debhelper-compat golang-go

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Initialize Go module for u-cli
      run: |
        cd u-cli
        go mod init u

    - name: Build U-CLI binary (Linux)
      run: |
        cd u-cli
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o u-cli-linux-amd64 .
        tar -czf ../u-cli-linux-amd64.tar.gz u-cli-linux-amd64 README.md u-map.yaml

    - name: Build U-CLI binary (macOS)
      run: |
        cd u-cli
        CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o u-cli-darwin-amd64 .
        tar -czf ../u-cli-darwin-amd64.tar.gz u-cli-darwin-amd64 README.md u-map.yaml

    - name: Build U-CLI binary (Windows)
      run: |
        cd u-cli
        CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o u-cli-windows-amd64.exe .
        zip ../u-cli-windows-amd64.zip u-cli-windows-amd64.exe README.md u-map.yaml

    - name: Build Debian package
      run: |
        cd u-cli
        dpkg-buildpackage -us -uc -b
        mv ../u-cli_*.deb ../u-cli_amd64.deb

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: u-cli-artifacts
        path: |
          u-cli-linux-amd64.tar.gz
          u-cli-darwin-amd64.tar.gz
          u-cli-windows-amd64.zip
          u-cli_amd64.deb